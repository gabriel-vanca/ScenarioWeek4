ArrayList<Float> all_coordinates;
ArrayList<Float> solution_coordinates;

ArrayList<Robot> allRobots = new ArrayList<Robot>(); 
ArrayList<Obstacle> allObstacles = new ArrayList<Obstacle>();
ArrayList<ArrayList<SolutionPathLine>> allSolutionPathLines = new ArrayList<ArrayList<SolutionPathLine>>();
ArrayList<SolutionPathLine> allSolutionPathLinesMixed = new ArrayList<SolutionPathLine>(); 

int canvasSize = 650;
int halfCanvasSize = canvasSize/2;
int robotSize = 5;
int counter = 0;

float translationAmountX = halfCanvasSize;
float translationAmountY = halfCanvasSize;

void setup() {
  background(100);
  size(650, 650);
  translate(halfCanvasSize, halfCanvasSize);

  // Read the strings for tiguration
  String robot_coords = robot_coords10;
  String obstacle_string = obstacle_coords10;
  String solution_path = "";//"(23.143483261801634, -71.01863404867436), (19.881772674313268, -66.13686088630209), (29.20540046056739, -61.87607632975917), (30.187009675728078, -55.06598810305294);(19.881772674313268, -66.13686088630209), (18.553565655804732, -66.35954884894328);(18.553565655804732, -66.35954884894328), (11.44276273985799, -75.91791176592332);(29.20540046056739, -61.87607632975917), (30.940391258133403, -70.91686390220718), (35.876832004202285, -70.58897124533303);(11.44276273985799, -75.91791176592332), (9.024182494531274, -75.64658399489213);(30.940391258133403, -70.91686390220718), (29.20808778632214, -76.08520265862568);(35.876832004202285, -70.58897124533303), (36.49850070757428, -66.7315145065037);(30.187009675728078, -55.06598810305294), (34.12124872802724, -57.172770588124806);(36.49850070757428, -66.7315145065037), (40.573183786727284, -66.05072476179029), (44.68840515510031, -68.06555848482358);(34.12124872802724, -57.172770588124806), (37.204037467713334, -53.52657973483872);(40.573183786727284, -66.05072476179029), (42.040062026720776, -61.66561343371738);(42.040062026720776, -61.66561343371738), (45.37844409749327, -60.02950309040686);(44.68840515510031, -68.06555848482358), (46.20968075520504, -69.15451884209313);(37.204037467713334, -53.52657973483872), (40.44627463881794, -47.432771540601706), (42.51479075008959, -46.02762185596032);(40.44627463881794, -47.432771540601706), (44.04708522595759, -51.331876153030706);(46.20968075520504, -69.15451884209313), (47.740128010761765, -71.85071180208473);(45.37844409749327, -60.02950309040686), (48.03970034458435, -58.015835697259476), (50.02674970867281, -54.349062173431506), (53.615173484629906, -50.953237741063084);(48.03970034458435, -58.015835697259476), (51.26728452217958, -62.54523356284915);(42.51479075008959, -46.02762185596032), (42.18650109899738, -41.158817755424806);(50.02674970867281, -54.349062173431506), (52.075028165947415, -57.89000165246365);(51.26728452217958, -62.54523356284915), (55.313203070640355, -64.9676018528103);(47.740128010761765, -71.85071180208473), (55.20018531514435, -74.76849459459865);(9.024182494531274, -75.64658399489213), (6.391757685527274, -77.11251509023002), (-15.518117150125924, -74.63494891634105), (-12.732256491532382, -69.1495767653617);(42.18650109899738, -41.158817755424806), (46.28491149412392, -39.24617522401861);(53.615173484629906, -50.953237741063084), (54.70018639565561, -51.826026759084954);(-15.518117150125924, -74.63494891634105), (-6.23492068972152, -65.3351985874636), (-11.21424657477786, -62.73534784923339);(55.313203070640355, -64.9676018528103), (59.841951763435745, -68.921376827079);(59.841951763435745, -68.921376827079), (59.591629657838396, -72.94139176290578);(46.28491149412392, -39.24617522401861), (49.15823933085616, -36.19755229466818), (53.86561089226112, -40.58577156832027);(49.15823933085616, -36.19755229466818), (48.74020236395114, -34.888349247938606);(-6.23492068972152, -65.3351985874636), (-2.36795458993673, -64.57569993436728);(-2.36795458993673, -64.57569993436728), (2.7407226024494875, -59.463222774979954), (6.050538684675722, -50.97524470623021), (3.7992764265510033, -48.93498199480413);(53.86561089226112, -40.58577156832027), (58.63521439816518, -43.04462359817069), (60.04599499974573, -41.62698538825812), (58.21368657588809, -38.455484283523056);(-11.21424657477786, -62.73534784923339), (-13.279786526384122, -60.22233030873575);(2.7407226024494875, -59.463222774979954), (-3.128772747275889, -53.73573201668527);(-12.732256491532382, -69.1495767653617), (-30.254585220040155, -68.6410761308497), (-30.446066168932777, -63.73948414526832), (-30.772575018308007, -65.436158050663);(-30.254585220040155, -68.6410761308497), (-32.77469405341658, -69.62362144644182), (-35.637744356122695, -68.77862901978794);(-30.446066168932777, -63.73948414526832), (-23.407353556189904, -57.80790324043109);(-32.77469405341658, -69.62362144644182), (-31.714687364224915, -68.6031997927555);(58.21368657588809, -38.455484283523056), (57.70178888338501, -32.0574282671392);(-3.128772747275889, -53.73573201668527), (-6.526938349733079, -46.3229647384517);(57.70178888338501, -32.0574282671392), (57.54866219587919, -29.069805753562576);(-23.407353556189904, -57.80790324043109), (-18.677633706865954, -51.55735158553221), (-26.313283208880687, -49.26359209305727), (-31.002200500950767, -47.50603063305596);(6.050538684675722, -50.97524470623021), (7.398671790002673, -52.86916381522376);(57.54866219587919, -29.069805753562576), (54.82171652617426, -26.99376458991452);(-18.677633706865954, -51.55735158553221), (-13.609524400010407, -48.148797099735845);(-35.637744356122695, -68.77862901978794), (-42.1886404694476, -71.2767435671698), (-46.783483844936626, -73.21680724768937), (-48.23775771445056, -73.63487611692263);(7.398671790002673, -52.86916381522376), (8.43595685171082, -50.13831778717589);(-42.1886404694476, -71.2767435671698), (-41.993660777195636, -66.03056852448319);(-6.526938349733079, -46.3229647384517), (-4.90323877146573, -40.27179070690097);(54.82171652617426, -26.99376458991452), (55.615284588996886, -23.791362487184614), (59.31498780184046, -20.81245433824244);(55.615284588996886, -23.791362487184614), (55.24202159085135, -23.444301657644075);(-26.313283208880687, -49.26359209305727), (-22.361590598223607, -46.54315023932777), (-27.013013481045245, -42.2821689657957);(-30.772575018308007, -65.436158050663), (-32.85480904761046, -56.27809438990778);(-46.783483844936626, -73.21680724768937), (-47.251288656342155, -68.78712874959636);(8.43595685171082, -50.13831778717589), (12.44712237707779, -45.1553415074073);(-47.251288656342155, -68.78712874959636), (-48.07417666794908, -66.60304845215353);(-22.361590598223607, -46.54315023932777), (-17.464740099328374, -41.12323442853077);(-32.85480904761046, -56.27809438990778), (-34.44932426576808, -53.71579747606105);(-41.993660777195636, -66.03056852448319), (-44.12132845177807, -56.876997483511886);(-4.90323877146573, -40.27179070690097), (-11.992690750811356, -37.07581135462772);(55.24202159085135, -23.444301657644075), (50.61099545389587, -17.77560008259357), (52.280295315067406, -16.01636122603984);(-34.44932426576808, -53.71579747606105), (-37.93477148993635, -52.39923280131083);(-48.07417666794908, -66.60304845215353), (-50.674343972155675, -65.4528928456759);(50.61099545389587, -17.77560008259357), (50.136988755695796, -18.729220963164636);(-17.464740099328374, -41.12323442853077), (-20.211057603664813, -37.76569247390243);(-27.013013481045245, -42.2821689657957), (-26.88859822474255, -39.00884483805424);(52.280295315067406, -16.01636122603984), (59.12594769216415, -13.349323371679404);(-11.992690750811356, -37.07581135462772), (-12.51712583128807, -33.7473982577156), (-17.7792941715566, -26.464116485828434);(-50.674343972155675, -65.4528928456759), (-49.68916996080997, -61.476886443731345);(-37.93477148993635, -52.39923280131083), (-37.65654868718085, -48.16150932004635);(-26.88859822474255, -39.00884483805424), (-29.886547126068034, -37.33678470737849);(-20.211057603664813, -37.76569247390243), (-20.694520999407004, -34.96068601694745), (-21.943324867807412, -33.818252760704546);(59.12594769216415, -13.349323371679404), (57.74823854191142, -11.25883157052651), (52.67302607319566, -10.66166068690191), (53.26278938837456, -2.0037909603946247), (54.07170686091146, 1.568795271771478);(-29.886547126068034, -37.33678470737849), (-30.28647877370327, -36.408371685590474);(-20.694520999407004, -34.96068601694745), (-24.774880187479678, -34.646033012644736);(-12.51712583128807, -33.7473982577156), (-4.882416133350354, -27.875295677180056);(57.74823854191142, -11.25883157052651), (59.95620638017452, -10.37888957803429);(12.44712237707779, -45.1553415074073), (14.130670651324683, -40.86812762227729), (12.395631196067441, -36.78939778089485), (5.633450847443861, -43.61687594564124);(-24.774880187479678, -34.646033012644736), (-27.735485136323213, -33.88648427655047);(12.395631196067441, -36.78939778089485), (20.38934763377533, -39.232454001411554), (22.095104211489584, -31.755822719572137);(-37.65654868718085, -48.16150932004635), (-35.36918945859705, -43.856713372636364);(-27.735485136323213, -33.88648427655047), (-26.984487230732853, -31.446785494402036), (-31.851490467055985, -30.47486906118217);(-26.984487230732853, -31.446785494402036), (-23.557245142430027, -29.315046675507062), (-25.332131822575725, -26.152938649602227);(-44.12132845177807, -56.876997483511886), (-46.0916034367343, -45.19934902070884);(52.67302607319566, -10.66166068690191), (42.1373448936652, -9.322920672238695), (37.55540377690821, -11.311235191710793);(-23.557245142430027, -29.315046675507062), (-23.201173573187823, -29.35190179038694), (-22.256493006910443, -29.02390997997433), (-22.01456681111584, -26.832495725945932);(20.38934763377533, -39.232454001411554), (10.73874298669945, -29.845096664309366);(42.1373448936652, -9.322920672238695), (43.635385074780146, -5.662797511142344);(5.633450847443861, -43.61687594564124), (6.098566603143284, -41.56476566257355), (5.529260718915637, -40.74263987524919), (0.08088636320076148, -40.08950552801373);(22.095104211489584, -31.755822719572137), (24.126233339925662, -33.39640403636653);(-17.7792941715566, -26.464116485828434), (-18.839417601276146, -25.852257548677578);(-4.882416133350354, -27.875295677180056), (-0.41849898637265426, -19.592312370645708), (11.88972657746966, -5.8659728729360125), (18.951630933111772, -7.7853949711553305), (22.849047779169197, -9.087870629848624);(10.73874298669945, -29.845096664309366), (11.958875330281217, -27.513244154557164);(53.26278938837456, -2.0037909603946247), (49.39184217816377, -1.649508127412716), (47.22827831774072, 1.3398654497925406), (49.34694334341593, 6.400070054739942);(49.39184217816377, -1.649508127412716), (49.67293067148847, -1.4696148320715707);(0.08088636320076148, -40.08950552801373), (1.8606055104528476, -37.2013168228549), (1.2912996262251712, -36.37919103553054), (-0.036038671353011864, -36.7043704523969);(37.55540377690821, -11.311235191710793), (35.96119215481981, -9.494556622160644);(43.635385074780146, -5.662797511142344), (43.447661138179726, -1.1206570962377072);(24.126233339925662, -33.39640403636653), (26.79720385972253, -30.266856663198183);(-0.41849898637265426, -19.592312370645708), (-4.652656032042636, -13.827648720030552), (-6.483565545329968, -16.33236988062272), (-7.188955846120231, -17.041188985579), (-19.154264639438622, -15.676237979030958), (-9.885846994232779, -4.494807785425252), (-14.284004504015002, -7.158867166183237), (-21.289616790169447, -8.410430738788804);(-4.652656032042636, -13.827648720030552), (-8.108525097634313, -13.611773190063118);(35.96119215481981, -9.494556622160644), (34.00885058947935, -7.5726276900191465);(47.22827831774072, 1.3398654497925406), (45.27348617265373, 1.647734575643824);(54.07170686091146, 1.568795271771478), (56.73471782735109, 4.894591612551011);(26.79720385972253, -30.266856663198183), (29.067427905065912, -28.273851786439693);(29.067427905065912, -28.273851786439693), (31.510271085436173, -26.540167209943732);(45.27348617265373, 1.647734575643824), (41.913141205524, 5.057837389173272);(-31.851490467055985, -30.47486906118217), (-32.82555904035564, -27.537298546694416);(49.34694334341593, 6.400070054739942), (46.541695439467304, 7.623228046603046);(56.73471782735109, 4.894591612551011), (54.95356567770571, 10.146761658536846);(-19.154264639438622, -15.676237979030958), (-22.018692734215076, -18.80871267549225), (-25.70416558701401, -20.50464791011653);(34.00885058947935, -7.5726276900191465), (32.90160352550993, -0.24693191134878134);(41.913141205524, 5.057837389173272), (37.89862835090602, 6.534649250651967);(31.510271085436173, -26.540167209943732), (26.013846606287586, -18.546610472800637);(26.013846606287586, -18.546610472800637), (31.925867335988087, -19.09974659978289);(54.95356567770571, 10.146761658536846), (50.22257440020546, 14.402331104357899), (50.531757654312216, 16.050763191639007), (48.43576235797184, 21.305918215481626);(50.22257440020546, 14.402331104357899), (46.762154164851, 15.247028709607036);(-25.70416558701401, -20.50464791011653), (-30.520292886212804, -19.678731209581457);(50.531757654312216, 16.050763191639007), (53.97177628140429, 17.819547852297205);(37.89862835090602, 6.534649250651967), (36.4372976161866, 13.385229378306903), (32.56341545539385, 15.206677735020023), (31.695711568626677, 18.74274403318941), (20.912017178353487, 11.13519944397352), (20.098521863963352, 10.553627975050503), (20.890709272943283, 9.210094077929867);(11.88972657746966, -5.8659728729360125), (10.757469984946923, -2.6067798394132637);(36.4372976161866, 13.385229378306903), (36.80089781474959, 12.142125556592944);(-9.885846994232779, -4.494807785425252), (-7.932062992736582, -2.193704627323304), (-5.927900791066925, -0.06591527131793384);(46.762154164851, 15.247028709607036), (41.50322107625583, 17.107749958044167);(-30.520292886212804, -19.678731209581457), (-33.71935771398685, -21.143517408785122), (-35.98646132368442, -17.004131486021635);(41.50322107625583, 17.107749958044167), (38.97090937254913, 17.926016216750966);(48.43576235797184, 21.305918215481626), (46.46217346845306, 21.279339083760476);(32.56341545539385, 15.206677735020023), (28.815253580830586, 11.063651374011656);(-21.289616790169447, -8.410430738788804), (-19.23888063037691, -5.049553872144453), (-19.049903128979302, -1.2006181040875532);(-33.71935771398685, -21.143517408785122), (-43.235939789816804, -20.429562262828945), (-44.18062035609423, -20.75755407324167), (-46.67509175571573, -27.499349133796933), (-47.37739764162636, -14.5669194608801);(31.695711568626677, 18.74274403318941), (32.99157386026192, 20.765458628378468), (30.198807019785917, 25.800431781860453);(-19.049903128979302, -1.2006181040875532), (-16.324134340346596, 2.572530416329599);(46.46217346845306, 21.279339083760476), (45.90481727854103, 27.777170082461808), (47.2963046834152, 33.86496402404774);(-46.67509175571573, -27.499349133796933), (-44.6794245170769, -31.516326977666534), (-42.45198700332546, -31.50865012314494);(32.99157386026192, 20.765458628378468), (26.438281390224176, 21.39798206033035), (24.090099167908505, 26.267335447007397);(20.890709272943283, 9.210094077929867), (18.570940857787633, 9.211943395048337);(-42.45198700332546, -31.50865012314494), (-41.96193405052828, -35.3178864157344);(45.90481727854103, 27.777170082461808), (57.84497753333832, 33.1443975335432);(30.198807019785917, 25.800431781860453), (31.761015081680256, 27.940631621910867);(31.761015081680256, 27.940631621910867), (37.76948149822128, 30.266932287319904);(37.76948149822128, 30.266932287319904), (37.23283274949158, 31.0948168597358);(26.438281390224176, 21.39798206033035), (20.641054775004278, 20.177176206293737);(18.570940857787633, 9.211943395048337), (18.90705647895367, 10.599327303549739), (19.189736128135635, 12.03296974642494);(-16.324134340346596, 2.572530416329599), (-17.293531012711945, 10.67248592406473);(-47.37739764162636, -14.5669194608801), (-47.39872849795374, -9.090800226172476), (-47.80400901690062, -3.091866934763587);(37.23283274949158, 31.0948168597358), (37.823117507626066, 35.56608045523356);(37.823117507626066, 35.56608045523356), (37.82137074450125, 35.601115091459675);(-47.39872849795374, -9.090800226172476), (-40.73956656893672, -10.432269657221);(-17.293531012711945, 10.67248592406473), (-27.100367129892003, 8.211905896517507);(19.189736128135635, 12.03296974642494), (13.396942436401318, 14.502035957382631);(-40.73956656893672, -10.432269657221), (-37.694693789722585, -8.371570474332373);(-47.80400901690062, -3.091866934763587), (-46.63527183885389, -2.4780993956867405);(-46.63527183885389, -2.4780993956867405), (-46.84639837782326, -2.3789149730727956);(24.090099167908505, 26.267335447007397), (20.182916707132748, 34.51247031533299);(-27.100367129892003, 8.211905896517507), (-32.724040437321726, 9.017011569773544);(-37.694693789722585, -8.371570474332373), (-34.53227499336833, -5.338452103852802), (-31.0925972239289, -6.20684627772232);(-34.53227499336833, -5.338452103852802), (-38.740199391689586, -0.664999849909762), (-35.411219093717875, 1.3481974343040406);(13.396942436401318, 14.502035957382631), (7.907397960054425, 23.399240582279603), (6.011822444962888, 29.131808000359314);(-32.724040437321726, 9.017011569773544), (-32.61187135061999, 13.332265345210345), (-24.944084088789637, 19.70453793560911);(-46.84639837782326, -2.3789149730727956), (-45.03083337744168, 2.3629192550692295);(-32.61187135061999, 13.332265345210345), (-33.663980675860415, 13.353989292115756), (-35.009641224795146, 15.959566261203634);(-38.740199391689586, -0.664999849909762), (-39.92265893841475, 2.2139172050088973);(-33.663980675860415, 13.353989292115756), (-36.37010623067747, 13.030154690352774);(-45.03083337744168, 2.3629192550692295), (-43.562847075262795, 6.834813012662309);(7.907397960054425, 23.399240582279603), (12.096581304624223, 30.028528461022816);(-39.92265893841475, 2.2139172050088973), (-38.636734335726814, 6.319946102530835);(-43.562847075262795, 6.834813012662309), (-49.50215142247784, 7.6082535615849025);(-49.50215142247784, 7.6082535615849025), (-46.3472568258066, 12.755016621743707);(-35.009641224795146, 15.959566261203634), (-35.60811912165891, 25.302257619599132), (-37.71618061756419, 33.08952562885412), (-34.189229113612846, 36.633621153635495), (-28.77435769031559, 32.699385843054486), (-23.036844873826052, 27.26309980668205), (-22.089241855368737, 25.190227431532236);(-35.60811912165891, 25.302257619599132), (-39.33377677975324, 22.40207044672823);(-46.3472568258066, 12.755016621743707), (-44.04482634047373, 16.536023753506882);(-44.04482634047373, 16.536023753506882), (-47.084900590920356, 18.523105268736074);(6.011822444962888, 29.131808000359314), (-0.8319442201526144, 28.098612828915194);(-0.8319442201526144, 28.098612828915194), (-0.7003612756838891, 34.002881109168186);(-0.7003612756838891, 34.002881109168186), (-1.3814284106277341, 34.83880266144314);(-47.084900590920356, 18.523105268736074), (-49.459776326951605, 23.61709964317984);(-49.459776326951605, 23.61709964317984), (-47.89933919735632, 26.364620758510895);(-47.89933919735632, 26.364620758510895), (-46.21263945856274, 30.975457121504164);(-28.77435769031559, 32.699385843054486), (-27.348666294049654, 35.490987816732016);(-27.348666294049654, 35.490987816732016), (-19.30997998695468, 35.93229053288513), (-12.588573246071824, 34.20712986645357);(-19.30997998695468, 35.93229053288513), (-9.915836067516992, 21.320705470373028);(-46.21263945856274, 30.975457121504164), (-51.118612369314405, 35.179361147466665);(-12.588573246071824, 34.20712986645357), (-16.087740841920144, 35.901503502159755);(-23.036844873826052, 27.26309980668205), (-20.357643358354128, 27.756780707806982);(-9.915836067516992, 21.320705470373028), (-10.51461014312978, 16.858670522624294);(-20.357643358354128, 27.756780707806982), (-20.387992790079732, 26.333579611249135);(-10.51461014312978, 16.858670522624294), (-5.853608936191864, 15.4890561507575), (-4.435970726279312, 14.078275549176965), (-3.95823024799229, 10.75962774166193);(-3.95823024799229, 10.75962774166193), (-10.516830724510278, 7.2868745546410025);(-10.516830724510278, 7.2868745546410025), (-8.661454922688906, 6.996942107946224), (-0.3377741251788464, -0.941992890867283)";
  
  // Remove any spaces from both strings
  robot_coords = robot_coords.replaceAll("\\s+", "");  
  obstacle_string = obstacle_string.replaceAll("\\s+", "");
  solution_path = solution_path.replaceAll("\\s+", "");

  String delimSemi = ";";
  String delimOther = "[(,)]";

  // Split "obstacle_coords" String into String[] of separate obstacles
  String[] obstacles = obstacle_string.split(delimSemi);
  // Split "robot_coords" String into String[] of separate robot coordinates
  String[] robots = robot_coords.split(delimOther);
  // Split "solution_path" String into String[] of separate movements
  String[] solution = solution_path.split(delimSemi);

  ArrayList<Float> obstacle_coordinates = new ArrayList<Float>();
  ArrayList<Float> robot_coordinates = new ArrayList<Float>();
  solution_coordinates = new ArrayList<Float>();

  // Read all Robot coordinates
  for (String s : robots) {
    if (!s.isEmpty())
      robot_coordinates.add(Float.parseFloat(s));
  }

  // Read all obstacle coordinates
  obstacle_coordinates = new ArrayList<Float>();
  for (String o : obstacles) {
    String[] tokens = o.split(delimOther);
    // Parse each coordinate into a Float...
    for (String t : tokens) { 
      if (!t.isEmpty()) { 
        obstacle_coordinates.add(Float.parseFloat(t));
      }
    }
  }

  // Concat all node coordinates into one ArrayList to be used for scaling
  all_coordinates = new ArrayList<Float>();
  all_coordinates.addAll(obstacle_coordinates);
  all_coordinates.addAll(robot_coordinates);

  // Create all Obstacle objects
  for (String o : obstacles) {
    obstacle_coordinates = new ArrayList<Float>();
    String[] tokens = o.split(delimOther);
    // Parse each coordinate into a Float...
    for (String t : tokens) { 
      if (!t.isEmpty()) { 
        obstacle_coordinates.add(Float.parseFloat(t));
      }
    }
    Obstacle newObstacle = new Obstacle(obstacle_coordinates);
    allObstacles.add(newObstacle);
  }

  // Create all Robot objects
  for (int i = 0; i < robot_coordinates.size(); i+=2)
  {
    // Create new Robot object
    Robot newRobot = new Robot(robot_coordinates.get(i), robot_coordinates.get(i+1));
    allRobots.add(newRobot);
  }

  // Create all SolutionPathLine objects
  for (String s : solution) {
    String[] solution_moves = s.split(delimOther);
    solution_coordinates = new ArrayList<Float>();

    for (int i = 0; i < solution_moves.length; i++) {
      if (!solution_moves[i].isEmpty()) {
        solution_coordinates.add(Float.parseFloat(solution_moves[i]));
      }
    }

    ArrayList<SolutionPathLine> temp = new ArrayList<SolutionPathLine>();

    for (int i = 0; i < solution_coordinates.size()-3; i+=2) {
      float x = solution_coordinates.get(i);
      float y = solution_coordinates.get(i+1);
      float x2 = solution_coordinates.get(i+2);
      float y2 = solution_coordinates.get(i+3);

      SolutionPathLine l = new SolutionPathLine(x, y, x2, y2);
      temp.add(l);
    }
    allSolutionPathLines.add(temp);
  }

  for (ArrayList<SolutionPathLine> pathSet : allSolutionPathLines) {
    color thisPathColor = color((int)random(250), (int)random(250), (int)random(250));
    for (SolutionPathLine s : pathSet) {
      s.setColor(thisPathColor);
      allSolutionPathLinesMixed.add(s);
    }
  }
}



public void draw() {
  halfCanvasSize = canvasSize/2;
  clear();

  translate(translationAmountX, translationAmountY);
  //PImage bg = loadImage("bg2.jpg");
  //background(bg);
  background(30, 30, 30);

  if (counter < allSolutionPathLinesMixed.size()) {
    allSolutionPathLinesMixed.get(counter).setDrawNow(true);
    //println(counter);
    counter++;
  }

  //delay(100);

  drawAllObstacles();
  drawAllRobots();
  drawSolutionPaths();
  drawAxis();
  printLegend();
}

public void printLegend() {
  text("Zoom: z/x \nMove: arrow keys \nReset: r", -translationAmountX, -translationAmountY+10);
}

public void drawAllRobots() {
  ellipseMode(CENTER);
  fill(100);
  fill(204, 204, 204);
  for (Robot r : allRobots) {
    float adjustedX = (halfCanvasSize*r.getX())/biggestNumber(all_coordinates);
    float adjustedY = -halfCanvasSize*r.getY()/biggestNumber(all_coordinates);
    ellipse(adjustedX, adjustedY, robotSize, robotSize);
  }
}

public void drawAllObstacles() {
  for (Obstacle o : allObstacles) {
    beginShape();
    stroke(250, 250, 250, 100);
    fill(204, 204, 204, 50);
    for (int i = 0; i < o.getCoordinates().size(); i+=2)
    {
      float adjustedX = (halfCanvasSize*o.getCoordinates().get(i))/biggestNumber(all_coordinates);
      float adjustedY = -(halfCanvasSize*o.getCoordinates().get(i+1))/biggestNumber(all_coordinates);
      vertex(adjustedX, adjustedY);
      vertex(adjustedX, adjustedY);
    }
    endShape(CLOSE);
  }
}

public void drawAxis() {
  stroke(0, 0, 0, 100);
  line(0, -halfCanvasSize, 0, halfCanvasSize);
  line(-halfCanvasSize, 0, halfCanvasSize, 0);
}

public void drawSolutionPaths() {

  //stroke(247, 184, 70);
  strokeWeight(1);
  for (ArrayList<SolutionPathLine> pathSet : allSolutionPathLines) {
    //color thisPathColor = color((int)random(250), (int)random(250), (int)random(250));
    //stroke(random(25), random(250), random(250));
    for (int i = 0; i < pathSet.size(); i++) {

      float x = pathSet.get(i).x1;
      float y = pathSet.get(i).y1;
      float x2 = pathSet.get(i).x2;
      float y2 = pathSet.get(i).y2;

      float adjustedX = (halfCanvasSize*x)/biggestNumber(all_coordinates);
      float adjustedY = -(halfCanvasSize*y)/biggestNumber(all_coordinates);
      float adjustedX2 = (halfCanvasSize*x2)/biggestNumber(all_coordinates);
      float adjustedY2 = -(halfCanvasSize*y2)/biggestNumber(all_coordinates);

      if (pathSet.get(i).hasBeenDrawn == false) {
        //pathSet.get(i).setColor(thisPathColor);
        pathSet.get(i).setHasBeenDrawn(true);
      }

      if (pathSet.get(i).drawNow == true) {
        stroke(pathSet.get(i).getColor(), 100);
        line(adjustedX, adjustedY, adjustedX2, adjustedY2);
      }
    }
  }
}

/*  */
public float biggestNumber(ArrayList<Float> coordinates)
{
  float result = 0;
  for (float f : coordinates) {
    if (Math.abs(f) > result)
      result = Math.abs(f);
  }
  return result;
}


// For zooming in and out
void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      translationAmountY += 50;
    } else if (keyCode == DOWN) {
      translationAmountY -= 50;
    } else if (keyCode == RIGHT) {
      translationAmountX -= 50;
    } else if (keyCode == LEFT) {
      translationAmountX += 50;
    }
  } else {
    if (key == 'z') {
      canvasSize += 100;
    } else if (key == 'x') {
      canvasSize -= 100;
    } else if (key == 'r') {
      canvasSize = 650;
      translationAmountY = canvasSize/2;
      translationAmountX = canvasSize/2;
    }
  }
}